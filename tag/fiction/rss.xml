<?xml version="1.0" encoding="UTF-8" ?>

<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
<channel>
   
      <title></title>
   
   <link></link>
   <description>没啥说的，就是干</description>
   <language>zh-Hans</language>
   <managingEditor> </managingEditor>
   <atom:link href="rss" rel="self" type="application/rss+xml" />
   
	<item>
	  <title>Spring 传播机制实战</title>
	  <link>/spring-propagation</link>
	  <author></author>
	  <pubDate>2015-09-27T18:18:00+08:00</pubDate>
	  <guid>/spring-propagation</guid>
	  <description><![CDATA[
	     <p>Spring事务传播机制，敲一遍代码就记住了
<!--more-->
#</p>
<h3 id="场景佩奇要给乔治转账">场景：佩奇要给乔治转账</h3>

<ol>
  <li>基础操作：扣钱和加钱</li>
</ol>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	/**
     * 取款操作
     * @param name 用户
     * @param usd 钱
     */
	void withdrawal(String name, BigDecimal usd);
</code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	/**
     * 存款操作
     * @param name 用户
     * @param usd 钱
     */
    void deposit(String name, BigDecimal usd);
</code></pre></div></div>

<ol>
  <li>业务操作：转账，pappe给george转账10000块</li>
</ol>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	/**
     * 转账服务
     * @param oName 从该用户扣钱
     * @param dName 向该用户加钱
     */
    void transfer(String oName, String dName){
        balanceService.withdrawal(oName,new BigDecimal(10000));
        balanceService.deposit(dName,new BigDecimal(10000));
    }
</code></pre></div></div>

<h2 id="别说话就是干">别说话，就是干</h2>

<ol>
  <li>
    <p>propagation_required</p>

    <p>Spring默认的事务传播机制，如果外层有事务则该事物加入外层事务，一起提交或回滚，如果没有事务则当前开启一个新事物，该机制满足大多数业务场景。</p>

    <p>transfer、withdrawal、deposit传播机制都设置为<strong>propagation_required</strong>，任何一个方法抛异常，整个事务都会回滚。</p>
  </li>
</ol>

	  ]]></description>
	</item>


</channel>
</rss>
